# import User from './user.graphql'
# import PageInfo, ConnectionInput, Node, Connection from './commons.graphql'

type Message implements Node {
  id: ID!

  content: String!

  user: User!

  insertedAt: Date!

  updatedAt: Date!
}

type Query {
  message(input: GetMessageInput): Message

  messages(input: ConnectionInput): MessageConnection!
}

type Mutation {
  createMessage(input: CreateMessageInput!): Message!
}

type MessageConnection implements Connection {
  pageInfo: PageInfo!

  edges: [MessageEdge]!
}

type MessageEdge {
  cursor: String!

  node: Message!
}

# INPUTS

input GetMessageInput {
  content: String
}

input CreateMessageInput {
  content: String!
}

# SUBSCRIPTIONS

type Subscription {
  messageCreated: MessageCreated!
}

type MessageCreated {
  message: Message!
}
